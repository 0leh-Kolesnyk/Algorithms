class LinkedList { // создали класс списка
    constructor() {
        this.size = 0 // инициализируем переменную size, которая будет хранить в себе размер списка
        this.root = null//создали корневой эл-нт, которые пока равен пустому значению
    }

    add(value) { //фун, с помощью которой будем добавлять в список значения, параметром принимаем это значение
        if (this.size === 0) { //если размер списка = 0, то
            this.root = new Node(value);//создаем корневой эл-т со значением
            this.size += 1;//размер списка увеличиваем на 1
            return true;//возвращаем истину и прекращаем выполнение функции
        }
        let node = this.root//создали переменную, в которую поместили наш корневой элемент
        while (node.next) {//пока у текущего узла есть следующий элемент
            node = node.next//присваиваем узлу этот следующий элемент
        }//когда дойдем до последнего значения
        let newNode = new Node(value)//создаем новую Ноду, передаем в нее значение
        node.next = newNode//узлу до которого мы доитерировались как ссылку на след элемент указываем новую Ноду
        this.size += 1//и увеличиваем размер списка
    }

    getSize() {//функция, которая будет возвращать размер списка
        return this.size
    }

    print() {//функция, которая будет выводить  список в консоль.лог
        let result = []//создали массив, в который будем добавлять значения из узлов
        let node = this.root//создали переменную, в которую поместим текущий узел
        while (node) {//будем итерироваться пока у НОДЕ есть следующий элемент
            result.push(node.value)//добавляем в массив значения
            node = node.next//и присваиваем ноде следующий элемент в списке
        }
        console.log(result);
    }
}

class Node { // создали класс для узла
    constructor(value) { // конструктор, который параметром принимает значение, которое этот узел будет хранить
        this.value = value // сохраняем это значение внутри объекта
        this.next = null // создаем поле, которое будет хранить ссылку на след элемент в списке
    }
}

const list = new LinkedList()
list.add(5)
list.add(3)
list.add(2)
list.add(5)
list.add(7)

list.print()